{
  "swagger": "2.0",
  "info": {
    "title": "CGN Onboarding Portal",
    "description": "Carta Giovani Nazionale Onboarding Portal",
    "version": "0.0.1"
  },
  "schemes": [
    "https"
  ],
  "security": [
    {
      "Bearer": [],
      "UserRole": []
    }
  ],
  "tags": [
    {
      "name": "agreement",
      "description": "Agreement"
    },
    {
      "name": "profile",
      "description": "Profile"
    },
    {
      "name": "discount",
      "description": "Discount"
    },
    {
      "name": "document-template",
      "description": "Document template"
    },
    {
      "name": "document",
      "description": "Document"
    },
    {
      "name": "api-token",
      "description": "API Token"
    },
    {
      "name": "help",
      "description": "Help"
    },
    {
      "name": "geolocation-token",
      "description": "API Geolocation Token"
    },
    {
      "name": "bucket",
      "description": "Bucket Load"
    }
  ],
  "paths": {
    "/geolocation-token": {
      "get": {
        "tags": [
          "geolocation-token"
        ],
        "summary": "Get token for geolocation",
        "operationId": "getGeolocationToken",
        "responses": {
          "200": {
            "description": "Token for geolocation",
            "schema": {
              "$ref": "#/definitions/GeolocationToken"
            }
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          }
        }
      }
    },
    "/agreements": {
      "post": {
        "tags": [
          "agreement"
        ],
        "summary": "Create an agreement",
        "operationId": "createAgreement",
        "responses": {
          "200": {
            "description": "Agreement",
            "schema": {
              "$ref": "#/definitions/Agreement"
            }
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          }
        }
      }
    },
    "/agreements/{agreementId}/images": {
      "post": {
        "tags": [
          "agreement"
        ],
        "summary": "Upload an image",
        "operationId": "uploadImage",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AgreementId"
          },
          {
            "in": "formData",
            "name": "image",
            "type": "file",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Image uploaded",
            "schema": {
              "$ref": "#/definitions/UploadedImage"
            }
          },
          "400": {
            "description": "Image error code",
            "schema": {
              "$ref": "#/definitions/ImageErrorCode"
            }
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/agreements/{agreementId}/approval": {
      "post": {
        "tags": [
          "agreement"
        ],
        "summary": "Request agreement approval",
        "operationId": "requestApproval",
        "parameters": [
          {
            "$ref": "#/parameters/AgreementId"
          }
        ],
        "responses": {
          "204": {
            "description": "Agreement approval requested"
          },
          "400": {
            "$ref": "#/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/agreements/{agreementId}/profile": {
      "post": {
        "tags": [
          "profile"
        ],
        "summary": "Create a profile",
        "operationId": "createProfile",
        "parameters": [
          {
            "$ref": "#/parameters/AgreementId"
          },
          {
            "in": "body",
            "description": "Profile to create",
            "name": "profile",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateProfile"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Profile created",
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          },
          "400": {
            "$ref": "#/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      },
      "get": {
        "tags": [
          "profile"
        ],
        "summary": "Get a profile",
        "operationId": "getProfile",
        "parameters": [
          {
            "$ref": "#/parameters/AgreementId"
          }
        ],
        "responses": {
          "200": {
            "description": "Profile",
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      },
      "put": {
        "tags": [
          "profile"
        ],
        "summary": "Update a profile",
        "operationId": "updateProfile",
        "parameters": [
          {
            "in": "body",
            "description": "Profile to update",
            "name": "profile",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateProfile"
            }
          },
          {
            "$ref": "#/parameters/AgreementId"
          }
        ],
        "responses": {
          "200": {
            "description": "Profile updated",
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          },
          "400": {
            "$ref": "#/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/agreements/{agreementId}/discounts": {
      "get": {
        "tags": [
          "discount"
        ],
        "summary": "Get list of discounts",
        "operationId": "getDiscounts",
        "parameters": [
          {
            "$ref": "#/parameters/AgreementId"
          }
        ],
        "responses": {
          "200": {
            "description": "List of discounts",
            "schema": {
              "$ref": "#/definitions/Discounts"
            }
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      },
      "post": {
        "tags": [
          "discount"
        ],
        "summary": "Create a discount",
        "operationId": "createDiscount",
        "parameters": [
          {
            "$ref": "#/parameters/AgreementId"
          },
          {
            "in": "body",
            "description": "Discount to create",
            "name": "discount",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateDiscount"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Discount created",
            "schema": {
              "$ref": "#/definitions/Discount"
            }
          },
          "400": {
            "$ref": "#/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/agreements/{agreementId}/discounts/bucket": {
      "post": {
        "tags": [
          "bucket"
        ],
        "summary": "uploadBucket",
        "operationId": "uploadBucket",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AgreementId"
          },
          {
            "in": "formData",
            "name": "document",
            "type": "file",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Bucket uploaded",
            "schema": {
              "$ref": "#/definitions/BucketLoad"
            }
          },
          "400": {
            "$ref": "#/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "409": {
            "$ref": "#/responses/Conflict"
          }
        }
      }
    },
    "/agreements/{agreementId}/discounts/{discountId}/bucket-loading-progress": {
      "get": {
        "tags": [
          "discount-bucket-loading-progress"
        ],
        "summary": "Get the loading progress for the last bucket of codes of a discount",
        "operationId": "getDiscountBucketCodeLoadingProgess",
        "parameters": [
          {
            "$ref": "#/parameters/AgreementId"
          },
          {
            "$ref": "#/parameters/DiscountId"
          }
        ],
        "responses": {
          "200": {
            "description": "Number of codes loaded for running bucket",
            "schema": {
              "$ref": "#/definitions/DiscountBucketCodeLoadingProgess"
            }
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/agreements/{agreementId}/discounts/{discountId}": {
      "get": {
        "tags": [
          "discount"
        ],
        "summary": "Get discount by id",
        "operationId": "getDiscountById",
        "parameters": [
          {
            "$ref": "#/parameters/AgreementId"
          },
          {
            "$ref": "#/parameters/DiscountId"
          }
        ],
        "responses": {
          "200": {
            "description": "Discount",
            "schema": {
              "$ref": "#/definitions/Discount"
            }
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      },
      "put": {
        "tags": [
          "discount"
        ],
        "summary": "Update a discount",
        "operationId": "updateDiscount",
        "parameters": [
          {
            "$ref": "#/parameters/AgreementId"
          },
          {
            "$ref": "#/parameters/DiscountId"
          },
          {
            "in": "body",
            "description": "Discount to update",
            "name": "discount",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateDiscount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Discount updated",
            "schema": {
              "$ref": "#/definitions/Discount"
            }
          },
          "400": {
            "$ref": "#/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "409": {
            "$ref": "#/responses/Conflict"
          }
        }
      },
      "delete": {
        "tags": [
          "discount"
        ],
        "summary": "Delete a discount",
        "operationId": "deleteDiscount",
        "parameters": [
          {
            "$ref": "#/parameters/AgreementId"
          },
          {
            "$ref": "#/parameters/DiscountId"
          }
        ],
        "responses": {
          "204": {
            "description": "Discount deleted"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/agreements/{agreementId}/discounts/{discountId}/testing": {
      "post": {
        "tags": [
          "discount"
        ],
        "summary": "Set a discount ready to be tested",
        "operationId": "testDiscount",
        "parameters": [
          {
            "$ref": "#/parameters/AgreementId"
          },
          {
            "$ref": "#/parameters/DiscountId"
          }
        ],
        "responses": {
          "204": {
            "description": "Discount ready to test"
          },
          "400": {
            "$ref": "#/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/agreements/{agreementId}/discounts/{discountId}/publishing": {
      "post": {
        "tags": [
          "discount"
        ],
        "summary": "Publish a discount",
        "operationId": "publishDiscount",
        "parameters": [
          {
            "$ref": "#/parameters/AgreementId"
          },
          {
            "$ref": "#/parameters/DiscountId"
          }
        ],
        "responses": {
          "204": {
            "description": "Discount published"
          },
          "400": {
            "$ref": "#/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/agreements/{agreementId}/discounts/{discountId}/unpublishing": {
      "post": {
        "tags": [
          "discount"
        ],
        "summary": "Unpublish a discount making it a draft",
        "operationId": "unpublishDiscount",
        "parameters": [
          {
            "$ref": "#/parameters/AgreementId"
          },
          {
            "$ref": "#/parameters/DiscountId"
          }
        ],
        "responses": {
          "204": {
            "description": "Discount suspended"
          },
          "400": {
            "$ref": "#/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/agreements/{agreementId}/document-templates/{documentType}": {
      "get": {
        "tags": [
          "document-template"
        ],
        "summary": "Download a document template",
        "operationId": "downloadDocumentTemplate",
        "parameters": [
          {
            "$ref": "#/parameters/AgreementId"
          },
          {
            "$ref": "#/parameters/DocumentType"
          }
        ],
        "responses": {
          "200": {
            "description": "Document template",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "$ref": "#/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/agreements/{agreementId}/documents": {
      "get": {
        "tags": [
          "document"
        ],
        "summary": "Get documents",
        "operationId": "getDocuments",
        "parameters": [
          {
            "$ref": "#/parameters/AgreementId"
          }
        ],
        "responses": {
          "200": {
            "description": "List of documents",
            "schema": {
              "$ref": "#/definitions/Documents"
            }
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/agreements/{agreementId}/documents/{documentType}": {
      "post": {
        "tags": [
          "document"
        ],
        "summary": "Upload a document",
        "operationId": "uploadDocument",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AgreementId"
          },
          {
            "$ref": "#/parameters/DocumentType"
          },
          {
            "in": "formData",
            "name": "document",
            "type": "file",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Document uploaded",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          },
          "400": {
            "$ref": "#/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      },
      "delete": {
        "tags": [
          "document"
        ],
        "summary": "Delete a document",
        "operationId": "deleteDocument",
        "parameters": [
          {
            "$ref": "#/parameters/AgreementId"
          },
          {
            "$ref": "#/parameters/DocumentType"
          }
        ],
        "responses": {
          "204": {
            "description": "Document deleted"
          },
          "400": {
            "$ref": "#/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/agreements/{agreementId}/api-tokens": {
      "post": {
        "tags": [
          "api-token"
        ],
        "summary": "Retrieve or Create API Tokens",
        "operationId": "getTokens",
        "parameters": [
          {
            "$ref": "#/parameters/AgreementId"
          }
        ],
        "responses": {
          "200": {
            "description": "Api Token",
            "schema": {
              "$ref": "#/definitions/ApiTokens"
            }
          },
          "400": {
            "$ref": "#/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          }
        }
      }
    },
    "/agreements/{agreementId}/api-tokens/{tokenType}": {
      "post": {
        "tags": [
          "api-token"
        ],
        "summary": "Regenerate Api Token",
        "operationId": "regenerateToken",
        "parameters": [
          {
            "$ref": "#/parameters/AgreementId"
          },
          {
            "name": "tokenType",
            "in": "path",
            "description": "Token type",
            "required": true,
            "type": "string",
            "enum": [
              "primary",
              "secondary"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "New Api Tokens",
            "schema": {
              "$ref": "#/definitions/ApiTokens"
            }
          },
          "400": {
            "$ref": "#/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          }
        }
      }
    },
    "/agreements/{agreementId}/help": {
      "post": {
        "tags": [
          "help"
        ],
        "summary": "Send an help request",
        "operationId": "sendHelpRequest",
        "parameters": [
          {
            "$ref": "#/parameters/AgreementId"
          },
          {
            "in": "body",
            "description": "Help request",
            "name": "helpRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HelpRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Request Received"
          }
        }
      }
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "parameters": {
    "AgreementId": {
      "name": "agreementId",
      "in": "path",
      "description": "Agreement id",
      "required": true,
      "type": "string"
    },
    "DiscountId": {
      "name": "discountId",
      "in": "path",
      "description": "Discount id",
      "required": true,
      "type": "string"
    },
    "DocumentType": {
      "name": "documentType",
      "in": "path",
      "description": "Document type",
      "required": true,
      "type": "string"
    }
  },
  "definitions": {
    "Agreement": {
      "type": "object",
      "discriminator": "state",
      "required": [
        "id",
        "state",
        "completedSteps"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/AgreementState"
        },
        "imageUrl": {
          "type": "string"
        },
        "completedSteps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CompletedStep"
          }
        }
      }
    },
    "DraftAgreement": {
      "allOf": [
        {
          "$ref": "#/definitions/Agreement"
        },
        {
          "type": "object"
        }
      ]
    },
    "PendingAgreement": {
      "allOf": [
        {
          "$ref": "#/definitions/Agreement"
        },
        {
          "type": "object"
        }
      ]
    },
    "ApprovedAgreement": {
      "allOf": [
        {
          "$ref": "#/definitions/Agreement"
        },
        {
          "type": "object",
          "required": [
            "startDate",
            "endDate"
          ],
          "properties": {
            "startDate": {
              "type": "string",
              "format": "date"
            },
            "endDate": {
              "type": "string",
              "format": "date"
            },
            "firstDiscountPublishingDate": {
              "type": "string",
              "format": "date"
            }
          }
        }
      ]
    },
    "RejectedAgreement": {
      "allOf": [
        {
          "$ref": "#/definitions/Agreement"
        },
        {
          "type": "object",
          "required": [
            "reasonMessage"
          ],
          "properties": {
            "reasonMessage": {
              "type": "string",
              "maxLength": 500
            }
          }
        }
      ]
    },
    "AgreementState": {
      "type": "string",
      "enum": [
        "DraftAgreement",
        "PendingAgreement",
        "ApprovedAgreement",
        "RejectedAgreement"
      ]
    },
    "CompletedStep": {
      "type": "string",
      "enum": [
        "Profile",
        "Discount",
        "Document"
      ]
    },
    "UploadedImage": {
      "type": "object",
      "required": [
        "imageUrl"
      ],
      "properties": {
        "imageUrl": {
          "type": "string"
        }
      }
    },
    "CreateProfile": {
      "type": "object",
      "required": [
        "fullName",
        "taxCodeOrVat",
        "pecAddress",
        "legalOffice",
        "telephoneNumber",
        "legalRepresentativeFullName",
        "legalRepresentativeTaxCode",
        "referent",
        "description",
        "salesChannel"
      ],
      "properties": {
        "fullName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "taxCodeOrVat": {
          "type": "string",
          "minLength": 8,
          "maxLength": 16
        },
        "pecAddress": {
          "type": "string",
          "format": "email",
          "minLength": 5,
          "maxLength": 100
        },
        "legalOffice": {
          "type": "string"
        },
        "telephoneNumber": {
          "type": "string",
          "minLength": 4,
          "maxLength": 15
        },
        "legalRepresentativeFullName": {
          "type": "string"
        },
        "legalRepresentativeTaxCode": {
          "type": "string",
          "minLength": 4,
          "maxLength": 20
        },
        "referent": {
          "$ref": "#/definitions/CreateReferent"
        },
        "description": {
          "type": "string"
        },
        "salesChannel": {
          "$ref": "#/definitions/SalesChannel"
        }
      }
    },
    "UpdateProfile": {
      "type": "object",
      "required": [
        "pecAddress",
        "legalOffice",
        "telephoneNumber",
        "legalRepresentativeFullName",
        "legalRepresentativeTaxCode",
        "referent",
        "description",
        "salesChannel"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "pecAddress": {
          "type": "string",
          "format": "email",
          "minLength": 5,
          "maxLength": 100
        },
        "legalOffice": {
          "type": "string"
        },
        "telephoneNumber": {
          "type": "string",
          "minLength": 4,
          "maxLength": 15
        },
        "legalRepresentativeFullName": {
          "type": "string"
        },
        "legalRepresentativeTaxCode": {
          "type": "string",
          "minLength": 4,
          "maxLength": 20
        },
        "referent": {
          "$ref": "#/definitions/UpdateReferent"
        },
        "description": {
          "type": "string"
        },
        "salesChannel": {
          "$ref": "#/definitions/SalesChannel"
        }
      }
    },
    "Profile": {
      "type": "object",
      "required": [
        "id",
        "agreementId",
        "fullName",
        "taxCodeOrVat",
        "pecAddress",
        "legalOffice",
        "telephoneNumber",
        "legalRepresentativeFullName",
        "legalRepresentativeTaxCode",
        "referent",
        "description",
        "salesChannel"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "agreementId": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "taxCodeOrVat": {
          "type": "string"
        },
        "pecAddress": {
          "type": "string",
          "format": "email",
          "minLength": 5,
          "maxLength": 100
        },
        "legalOffice": {
          "type": "string"
        },
        "telephoneNumber": {
          "type": "string",
          "minLength": 4,
          "maxLength": 15
        },
        "legalRepresentativeFullName": {
          "type": "string"
        },
        "legalRepresentativeTaxCode": {
          "type": "string",
          "minLength": 4,
          "maxLength": 20
        },
        "referent": {
          "$ref": "#/definitions/Referent"
        },
        "description": {
          "type": "string"
        },
        "salesChannel": {
          "$ref": "#/definitions/SalesChannel"
        }
      }
    },
    "Referent": {
      "type": "object",
      "required": [
        "firstName",
        "lastName",
        "role",
        "emailAddress",
        "telephoneNumber"
      ],
      "properties": {
        "firstName": {
          "type": "string",
          "maxLength": 100
        },
        "lastName": {
          "type": "string",
          "maxLength": 100
        },
        "role": {
          "type": "string",
          "maxLength": 100
        },
        "emailAddress": {
          "type": "string",
          "format": "email",
          "minLength": 5,
          "maxLength": 100
        },
        "telephoneNumber": {
          "type": "string",
          "minLength": 4,
          "maxLength": 15
        }
      }
    },
    "SalesChannel": {
      "type": "object",
      "discriminator": "channelType",
      "required": [
        "channelType"
      ],
      "properties": {
        "channelType": {
          "$ref": "#/definitions/SalesChannelType"
        }
      }
    },
    "OnlineChannel": {
      "allOf": [
        {
          "$ref": "#/definitions/SalesChannel"
        },
        {
          "type": "object",
          "required": [
            "websiteUrl",
            "discountCodeType"
          ],
          "properties": {
            "websiteUrl": {
              "type": "string"
            },
            "discountCodeType": {
              "$ref": "#/definitions/DiscountCodeType"
            }
          }
        }
      ]
    },
    "OfflineChannel": {
      "allOf": [
        {
          "$ref": "#/definitions/SalesChannel"
        },
        {
          "type": "object",
          "required": [
            "addresses"
          ],
          "properties": {
            "websiteUrl": {
              "type": "string"
            },
            "addresses": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Address"
              }
            },
            "allNationalAddresses": {
              "type": "boolean",
              "default": false
            }
          }
        }
      ]
    },
    "BothChannels": {
      "allOf": [
        {
          "$ref": "#/definitions/SalesChannel"
        },
        {
          "type": "object",
          "required": [
            "websiteUrl",
            "addresses"
          ],
          "properties": {
            "websiteUrl": {
              "type": "string"
            },
            "addresses": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Address"
              }
            },
            "allNationalAddresses": {
              "type": "boolean",
              "default": false
            },
            "discountCodeType": {
              "$ref": "#/definitions/DiscountCodeType"
            }
          }
        }
      ]
    },
    "SalesChannelType": {
      "type": "string",
      "enum": [
        "OnlineChannel",
        "OfflineChannel",
        "BothChannels"
      ]
    },
    "DiscountBucketCodeLoadingProgess": {
      "type": "object",
      "required": [
        "loaded",
        "percent"
      ],
      "properties": {
        "loaded": {
          "type": "integer",
          "format": "int64"
        },
        "percent": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "DiscountCodeType": {
      "type": "string",
      "enum": [
        "Static",
        "API",
        "LandingPage",
        "Bucket"
      ]
    },
    "CreateReferent": {
      "type": "object",
      "required": [
        "firstName",
        "lastName",
        "role",
        "emailAddress",
        "telephoneNumber"
      ],
      "properties": {
        "firstName": {
          "type": "string",
          "maxLength": 100
        },
        "lastName": {
          "type": "string",
          "maxLength": 100
        },
        "role": {
          "type": "string",
          "maxLength": 100
        },
        "emailAddress": {
          "type": "string",
          "format": "email",
          "minLength": 5,
          "maxLength": 100
        },
        "telephoneNumber": {
          "type": "string",
          "minLength": 4,
          "maxLength": 15
        }
      }
    },
    "UpdateReferent": {
      "type": "object",
      "required": [
        "firstName",
        "lastName",
        "role",
        "emailAddress",
        "telephoneNumber"
      ],
      "properties": {
        "firstName": {
          "type": "string",
          "maxLength": 100
        },
        "lastName": {
          "type": "string",
          "maxLength": 100
        },
        "role": {
          "type": "string",
          "maxLength": 100
        },
        "emailAddress": {
          "type": "string",
          "format": "email",
          "minLength": 5,
          "maxLength": 100
        },
        "telephoneNumber": {
          "type": "string",
          "minLength": 4,
          "maxLength": 15
        }
      }
    },
    "CreateDiscount": {
      "type": "object",
      "required": [
        "name",
        "startDate",
        "endDate",
        "productCategories"
      ],
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 100
        },
        "description": {
          "type": "string",
          "maxLength": 250
        },
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        },
        "discount": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 100
        },
        "productCategories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductCategory"
          },
          "minItems": 1
        },
        "condition": {
          "type": "string",
          "maxLength": 200
        },
        "staticCode": {
          "type": "string",
          "maxLength": 100
        },
        "visibleOnEyca": {
          "type": "boolean",
          "default": false
        },
        "landingPageUrl": {
          "type": "string",
          "maxLength": 500
        },
        "landingPageReferrer": {
          "type": "string",
          "maxLength": 100
        },
        "lastBucketCodeLoadUid": {
          "type": "string",
          "maxLength": 255
        },
        "lastBucketCodeLoadFileName": {
          "type": "string",
          "maxLength": 255
        },
        "discountUrl": {
          "type": "string",
          "maxLength": 500
        }
      }
    },
    "UpdateDiscount": {
      "type": "object",
      "required": [
        "name",
        "description",
        "startDate",
        "endDate",
        "productCategories",
        "condition"
      ],
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 100
        },
        "description": {
          "type": "string",
          "maxLength": 250
        },
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        },
        "discount": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 100
        },
        "productCategories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductCategory"
          },
          "minItems": 1
        },
        "condition": {
          "type": "string",
          "maxLength": 200
        },
        "staticCode": {
          "type": "string",
          "maxLength": 100
        },
        "visibleOnEyca": {
          "type": "boolean",
          "default": false
        },
        "landingPageUrl": {
          "type": "string",
          "maxLength": 500
        },
        "landingPageReferrer": {
          "type": "string",
          "maxLength": 100
        },
        "lastBucketCodeLoadUid": {
          "type": "string",
          "maxLength": 255
        },
        "lastBucketCodeLoadFileName": {
          "type": "string",
          "maxLength": 255
        },
        "discountUrl": {
          "type": "string",
          "maxLength": 500
        }
      }
    },
    "Discounts": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Discount"
          }
        }
      }
    },
    "Discount": {
      "type": "object",
      "required": [
        "id",
        "agreementId",
        "state",
        "name",
        "description",
        "startDate",
        "endDate",
        "productCategories",
        "condition"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "agreementId": {
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/DiscountState"
        },
        "name": {
          "type": "string",
          "maxLength": 100
        },
        "description": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        },
        "discount": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 100
        },
        "productCategories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductCategory"
          },
          "minItems": 1
        },
        "condition": {
          "type": "string"
        },
        "staticCode": {
          "type": "string",
          "maxLength": 100
        },
        "visibleOnEyca": {
          "type": "boolean",
          "default": false
        },
        "creationDate": {
          "type": "string",
          "format": "date"
        },
        "suspendedReasonMessage": {
          "type": "string",
          "maxLength": 250
        },
        "landingPageUrl": {
          "type": "string",
          "maxLength": 500
        },
        "landingPageReferrer": {
          "type": "string",
          "maxLength": 100
        },
        "lastBucketCodeLoadUid": {
          "type": "string",
          "maxLength": 255
        },
        "lastBucketCodeLoadFileName": {
          "type": "string",
          "maxLength": 255
        },
        "lastBucketCodeLoadStatus": {
          "$ref": "#/definitions/BucketCodeLoadStatus"
        },
        "discountUrl": {
          "type": "string",
          "maxLength": 500
        }
      }
    },
    "BucketCodeLoadStatus": {
      "type": "string",
      "enum": [
        "pending",
        "running",
        "finished",
        "failed"
      ]
    },
    "DiscountState": {
      "type": "string",
      "enum": [
        "draft",
        "published",
        "suspended",
        "expired",
        "to_test",
        "test_ok",
        "test_ko"
      ]
    },
    "ProductCategory": {
      "type": "string",
      "enum": [
        "BankingServices",
        "CultureAndEntertainment",
        "Health",
        "Home",
        "JobOffers",
        "Learning",
        "Sports",
        "SustainableMobility",
        "TelephonyAndInternet",
        "Travelling"
      ]
    },
    "Address": {
      "type": "object",
      "required": [
        "fullAddress"
      ],
      "properties": {
        "fullAddress": {
          "type": "string",
          "minLength": 10,
          "maxLength": 500
        },
        "coordinates": {
          "$ref": "#/definitions/Coordinates"
        }
      }
    },
    "Coordinates": {
      "type": "object",
      "required": [
        "latitude",
        "longitude"
      ],
      "properties": {
        "latitude": {
          "type": "number"
        },
        "longitude": {
          "type": "number"
        }
      }
    },
    "Documents": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Document"
          }
        }
      }
    },
    "Document": {
      "type": "object",
      "required": [
        "documentType",
        "documentUrl",
        "documentTimestamp"
      ],
      "properties": {
        "documentType": {
          "type": "string"
        },
        "documentUrl": {
          "type": "string"
        },
        "documentTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "BucketLoad": {
      "type": "object",
      "required": [
        "uid"
      ],
      "properties": {
        "uid": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        }
      }
    },
    "ApiTokens": {
      "type": "object",
      "required": [
        "primaryToken",
        "secondaryToken"
      ],
      "properties": {
        "primaryToken": {
          "type": "string"
        },
        "secondaryToken": {
          "type": "string"
        }
      }
    },
    "HelpRequest": {
      "type": "object",
      "required": [
        "category",
        "message"
      ],
      "properties": {
        "category": {
          "type": "string",
          "enum": [
            "Access",
            "DataFilling",
            "Discounts",
            "Documents",
            "TechnicalProblem",
            "CgnOwnerReporting",
            "Suggestions",
            "Other"
          ]
        },
        "topic": {
          "type": "string"
        },
        "message": {
          "type": "string",
          "maxLength": 200
        }
      }
    },
    "GeolocationToken": {
      "type": "object",
      "required": [
        "token"
      ],
      "properties": {
        "token": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "ImageErrorCode": {
      "type": "string",
      "enum": [
        "INVALID_IMAGE_TYPE",
        "INVALID_DIMENSION",
        "GENERIC",
        "IMAGE_SIZE_EXCEEDED"
      ]
    }
  },
  "responses": {
    "InvalidRequest": {
      "description": "Bad request"
    },
    "Forbidden": {
      "description": "Forbidden"
    },
    "NotFound": {
      "description": "Not found"
    },
    "Conflict": {
      "description": "Conflict"
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization",
      "description": "JWT Authorization header using the Bearer scheme"
    },
    "UserRole": {
      "type": "apiKey",
      "in": "header",
      "name": "X-CGN-USER-ROLE",
      "description": "Custom header containing requesting user role"
    }
  }
}