{
  "swagger": "2.0",
  "info": {
    "title": "CGN Onboarding Portal Backoffice",
    "description": "Carta Giovani Nazionale Onboarding Portal Backoffice",
    "version": "0.0.1"
  },
  "schemes": [
    "https"
  ],
  "security": [
    {
      "Bearer": [],
      "UserRole": []
    }
  ],
  "tags": [
    {
      "name": "agreement",
      "description": "Agreement"
    },
    {
      "name": "document",
      "description": "Document"
    },
    {
      "name": "discount",
      "description": "Discount"
    }
  ],
  "paths": {
    "/agreement-requests": {
      "get": {
        "tags": [
          "agreement"
        ],
        "summary": "Get list of agreements",
        "operationId": "getAgreements",
        "parameters": [
          {
            "in": "query",
            "name": "states",
            "description": "Values from `AgreementState`",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "assignee",
            "description": "Assigned agreement assignee",
            "required": false,
            "type": "string",
            "enum": [
              "Me",
              "Others"
            ]
          },
          {
            "in": "query",
            "name": "profileFullName",
            "description": "String to search in profile full name",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "requestDateFrom",
            "description": "Agreement request date lower bound",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "in": "query",
            "name": "requestDateTo",
            "description": "Agreement request date upper bound",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "$ref": "#/parameters/PageSize"
          },
          {
            "$ref": "#/parameters/PageNumber"
          },
          {
            "$ref": "#/parameters/RequestColumnSort"
          },
          {
            "$ref": "#/parameters/SortDirection"
          }
        ],
        "responses": {
          "200": {
            "description": "List of agreements",
            "schema": {
              "$ref": "#/definitions/Agreements"
            }
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          }
        }
      }
    },
    "/agreement-requests/{agreementId}/assignee": {
      "put": {
        "tags": [
          "agreement"
        ],
        "summary": "Assign an agreement to the user",
        "operationId": "assignAgreement",
        "parameters": [
          {
            "$ref": "#/parameters/AgreementId"
          }
        ],
        "responses": {
          "204": {
            "description": "Agreement assigned to the user"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "409": {
            "$ref": "#/responses/Conflict"
          }
        }
      },
      "delete": {
        "tags": [
          "agreement"
        ],
        "summary": "Unassign an agreement to the user",
        "operationId": "unassignAgreement",
        "parameters": [
          {
            "$ref": "#/parameters/AgreementId"
          }
        ],
        "responses": {
          "204": {
            "description": "Agreement unassigned to the user"
          },
          "400": {
            "$ref": "#/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "409": {
            "$ref": "#/responses/Conflict"
          }
        }
      }
    },
    "/agreement-requests/{agreementId}/approval": {
      "post": {
        "tags": [
          "agreement"
        ],
        "summary": "Approve an agreement",
        "operationId": "approveAgreement",
        "parameters": [
          {
            "$ref": "#/parameters/AgreementId"
          }
        ],
        "responses": {
          "204": {
            "description": "Agreement approved"
          },
          "400": {
            "$ref": "#/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "409": {
            "$ref": "#/responses/Conflict"
          }
        }
      }
    },
    "/agreement-requests/{agreementId}/refusal": {
      "post": {
        "tags": [
          "agreement"
        ],
        "summary": "Reject an agreement",
        "operationId": "rejectAgreement",
        "parameters": [
          {
            "$ref": "#/parameters/AgreementId"
          },
          {
            "in": "body",
            "description": "Agreement refusal",
            "name": "refusal",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RefuseAgreement"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Agreement rejected"
          },
          "400": {
            "$ref": "#/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "409": {
            "$ref": "#/responses/Conflict"
          }
        }
      }
    },
    "/agreement-requests/{agreementId}/documents": {
      "get": {
        "tags": [
          "document"
        ],
        "summary": "Get documents",
        "operationId": "getDocuments",
        "parameters": [
          {
            "$ref": "#/parameters/AgreementId"
          }
        ],
        "responses": {
          "200": {
            "description": "List of documents",
            "schema": {
              "$ref": "#/definitions/Documents"
            }
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/agreement-requests/{agreementId}/documents/{documentType}": {
      "post": {
        "tags": [
          "document"
        ],
        "summary": "Upload a document",
        "operationId": "uploadDocument",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AgreementId"
          },
          {
            "$ref": "#/parameters/DocumentType"
          },
          {
            "in": "formData",
            "name": "document",
            "type": "file",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Document uploaded",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          },
          "400": {
            "$ref": "#/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "409": {
            "$ref": "#/responses/Conflict"
          }
        }
      },
      "delete": {
        "tags": [
          "document"
        ],
        "summary": "Delete a document",
        "operationId": "deleteDocument",
        "parameters": [
          {
            "$ref": "#/parameters/AgreementId"
          },
          {
            "$ref": "#/parameters/DocumentType"
          }
        ],
        "responses": {
          "204": {
            "description": "Document deleted"
          },
          "400": {
            "$ref": "#/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/agreement-requests/{agreementId}/discounts/{discountId}/suspension": {
      "post": {
        "tags": [
          "discount"
        ],
        "summary": "Suspend a discount",
        "operationId": "suspendDiscount",
        "parameters": [
          {
            "$ref": "#/parameters/AgreementId"
          },
          {
            "$ref": "#/parameters/DiscountId"
          },
          {
            "in": "body",
            "description": "Discount suspension",
            "name": "suspension",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SuspendDiscount"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Discount suspended"
          },
          "400": {
            "$ref": "#/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "409": {
            "$ref": "#/responses/Conflict"
          }
        }
      }
    },
    "/agreement-requests/{agreementId}/discounts/{discountId}/bucket-code": {
      "get": {
        "tags": [
          "discount"
        ],
        "summary": "Get a bucket code for discount",
        "operationId": "getDiscountBucketCode",
        "parameters": [
          {
            "$ref": "#/parameters/AgreementId"
          },
          {
            "$ref": "#/parameters/DiscountId"
          }
        ],
        "responses": {
          "200": {
            "description": "A bucket code",
            "schema": {
              "$ref": "#/definitions/BucketCode"
            }
          },
          "400": {
            "$ref": "#/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "409": {
            "$ref": "#/responses/Conflict"
          }
        }
      }
    },
    "/agreement-requests/{agreementId}/discounts/{discountId}/test-passed": {
      "post": {
        "tags": [
          "discount"
        ],
        "summary": "Mark as test passed",
        "operationId": "setDiscountTestPassed",
        "parameters": [
          {
            "$ref": "#/parameters/AgreementId"
          },
          {
            "$ref": "#/parameters/DiscountId"
          }
        ],
        "responses": {
          "204": {
            "description": "Test passed"
          },
          "400": {
            "$ref": "#/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "409": {
            "$ref": "#/responses/Conflict"
          }
        }
      }
    },
    "/agreement-requests/{agreementId}/discounts/{discountId}/test-failed": {
      "post": {
        "tags": [
          "discount"
        ],
        "summary": "Mark as test failed with a reason",
        "operationId": "setDiscountTestFailed",
        "parameters": [
          {
            "$ref": "#/parameters/AgreementId"
          },
          {
            "$ref": "#/parameters/DiscountId"
          },
          {
            "in": "body",
            "description": "Failure reason",
            "name": "failure",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FailureReason"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Test failed"
          },
          "400": {
            "$ref": "#/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "409": {
            "$ref": "#/responses/Conflict"
          }
        }
      }
    },
    "/approved-agreements": {
      "get": {
        "tags": [
          "agreement"
        ],
        "summary": "Get list of approved agreements",
        "operationId": "getApprovedAgreements",
        "parameters": [
          {
            "in": "query",
            "name": "profileFullName",
            "description": "String to search in profile full name",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "lastUpdateDateFrom",
            "description": "Agreement last update date lower bound",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "in": "query",
            "name": "lastUpdateDateTo",
            "description": "Agreement last update date upper bound",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "$ref": "#/parameters/PageSize"
          },
          {
            "$ref": "#/parameters/PageNumber"
          },
          {
            "$ref": "#/parameters/ApprovedColumnSort"
          },
          {
            "$ref": "#/parameters/SortDirection"
          }
        ],
        "responses": {
          "200": {
            "description": "List of approved agreements",
            "schema": {
              "$ref": "#/definitions/ApprovedAgreements"
            }
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          }
        }
      }
    },
    "/approved-agreements/{agreementId}": {
      "get": {
        "tags": [
          "agreement"
        ],
        "summary": "Get approved agreement",
        "operationId": "getApprovedAgreement",
        "parameters": [
          {
            "$ref": "#/parameters/AgreementId"
          }
        ],
        "responses": {
          "200": {
            "description": "Approved agreement",
            "schema": {
              "$ref": "#/definitions/ApprovedAgreementDetail"
            }
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/organizations": {
      "get": {
        "tags": [
          "attributeauthority"
        ],
        "operationId": "getOrganizations",
        "summary": "Get organizations",
        "description": "Get all organizations",
        "parameters": [
          {
            "$ref": "#/parameters/SearchQuery"
          },
          {
            "$ref": "#/parameters/PageNumber"
          },
          {
            "$ref": "#/parameters/PageSize"
          },
          {
            "$ref": "#/parameters/SortOrganizationsBy"
          },
          {
            "$ref": "#/parameters/SortDirection"
          }
        ],
        "responses": {
          "200": {
            "description": "List of organizations.",
            "schema": {
              "$ref": "#/definitions/Organizations"
            }
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      },
      "post": {
        "tags": [
          "attributeauthority"
        ],
        "operationId": "upsertOrganization",
        "summary": "Upsert organization.",
        "description": "Update or insert an organization.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrganizationWithReferents"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Upserted organization.",
            "schema": {
              "$ref": "#/definitions/OrganizationWithReferents"
            }
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/organization/{keyOrganizationFiscalCode}": {
      "get": {
        "tags": [
          "attributeauthority"
        ],
        "operationId": "getOrganization",
        "summary": "Get organization",
        "description": "Get an organization by fiscal code",
        "parameters": [
          {
            "$ref": "#/parameters/KeyOrganizationFiscalCode"
          }
        ],
        "responses": {
          "200": {
            "description": "An organization with referents.",
            "schema": {
              "$ref": "#/definitions/OrganizationWithReferentsAndStatus"
            }
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      },
      "delete": {
        "tags": [
          "attributeauthority"
        ],
        "operationId": "deleteOrganization",
        "summary": "Delete organization.",
        "description": "Delete an organization",
        "parameters": [
          {
            "$ref": "#/parameters/KeyOrganizationFiscalCode"
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted."
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/organization/{keyOrganizationFiscalCode}/referents": {
      "get": {
        "tags": [
          "attributeauthority"
        ],
        "operationId": "getReferents",
        "summary": "Get referents",
        "description": "Get all referents for a organization",
        "parameters": [
          {
            "$ref": "#/parameters/KeyOrganizationFiscalCode"
          }
        ],
        "responses": {
          "200": {
            "description": "List of referents.",
            "schema": {
              "$ref": "#/definitions/Referents"
            }
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      },
      "post": {
        "tags": [
          "attributeauthority"
        ],
        "operationId": "insertReferent",
        "summary": "Insert referent.",
        "description": "Insert a referent fiscalcode.",
        "parameters": [
          {
            "$ref": "#/parameters/KeyOrganizationFiscalCode"
          },
          {
            "$ref": "#/parameters/ReferentFiscalCodeBody"
          }
        ],
        "responses": {
          "200": {
            "description": "Inserted referent."
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/organization/{keyOrganizationFiscalCode}/referents/{referentFiscalCode}": {
      "delete": {
        "tags": [
          "attributeauthority"
        ],
        "operationId": "deleteReferent",
        "summary": "Delete referent.",
        "description": "Delete a referent",
        "parameters": [
          {
            "$ref": "#/parameters/KeyOrganizationFiscalCode"
          },
          {
            "$ref": "#/parameters/ReferentFiscalCode"
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted."
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/export/agreements": {
      "get": {
        "tags": [
          "exports"
        ],
        "summary": "Download an export of agreements in CSV format",
        "operationId": "exportAgreements",
        "responses": {
          "200": {
            "description": "CSV export of all agreements",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "$ref": "#/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/export/eyca-discounts": {
      "get": {
        "tags": [
          "exports"
        ],
        "summary": "Download an export of eyca discounts in CSV format",
        "operationId": "exportEycaDiscounts",
        "responses": {
          "200": {
            "description": "CSV export of all agreements",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "$ref": "#/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "parameters": {
    "AgreementId": {
      "name": "agreementId",
      "in": "path",
      "description": "Agreement id",
      "required": true,
      "type": "string"
    },
    "PageSize": {
      "name": "pageSize",
      "in": "query",
      "description": "Page size",
      "required": false,
      "type": "integer",
      "default": 20
    },
    "PageNumber": {
      "name": "page",
      "in": "query",
      "description": "Page number",
      "required": false,
      "type": "integer",
      "default": 0
    },
    "DiscountId": {
      "name": "discountId",
      "in": "path",
      "description": "Discount id",
      "required": true,
      "type": "string"
    },
    "DocumentType": {
      "name": "documentType",
      "in": "path",
      "description": "Document type",
      "required": true,
      "type": "string",
      "enum": [
        "Agreement",
        "AdhesionRequest"
      ]
    },
    "RequestColumnSort": {
      "name": "sortColumn",
      "in": "query",
      "description": "Sort by column",
      "required": false,
      "type": "string",
      "enum": [
        "Operator",
        "RequestDate",
        "State",
        "Assignee"
      ]
    },
    "ApprovedColumnSort": {
      "name": "sortColumn",
      "in": "query",
      "description": "Sort by column",
      "required": false,
      "type": "string",
      "enum": [
        "Operator",
        "AgreementDate",
        "LastModifyDate",
        "PublishedDiscounts"
      ]
    },
    "KeyOrganizationFiscalCode": {
      "name": "keyOrganizationFiscalCode",
      "in": "path",
      "description": "Organization fiscal code",
      "required": true,
      "type": "string",
      "minLength": 8,
      "maxLength": 16
    },
    "ReferentFiscalCode": {
      "in": "path",
      "name": "referentFiscalCode",
      "description": "Referent fiscal code",
      "required": true,
      "type": "string",
      "pattern": "^[A-Z]{6}[0-9LMNPQRSTUV]{2}[ABCDEHLMPRST][0-9LMNPQRSTUV]{2}[A-Z][0-9LMNPQRSTUV]{3}[A-Z]$"
    },
    "ReferentFiscalCodeBody": {
      "in": "body",
      "name": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/ReferentFiscalCode"
      }
    },
    "SearchQuery": {
      "name": "searchQuery",
      "in": "query",
      "description": "String to search in organization name o fiscal code",
      "required": false,
      "type": "string",
      "minLength": 1,
      "maxLength": 100
    },
    "SortOrganizationsBy": {
      "name": "sortBy",
      "in": "query",
      "description": "The field to sort by",
      "required": false,
      "type": "string",
      "enum": [
        "fiscalCode",
        "name",
        "pec",
        "insertedAt"
      ]
    },
    "SortDirection": {
      "name": "sortDirection",
      "in": "query",
      "description": "Sort Direction",
      "required": false,
      "type": "string",
      "default": "ASC",
      "enum": [
        "ASC",
        "DESC"
      ]
    }
  },
  "definitions": {
    "Agreements": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Agreement"
          }
        },
        "total": {
          "type": "integer"
        }
      }
    },
    "ApprovedAgreements": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApprovedAgreement"
          }
        },
        "total": {
          "type": "integer"
        }
      }
    },
    "Agreement": {
      "type": "object",
      "discriminator": "state",
      "required": [
        "id",
        "state",
        "requestDate"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/AgreementState"
        },
        "requestDate": {
          "type": "string",
          "format": "date"
        },
        "profile": {
          "$ref": "#/definitions/Profile"
        },
        "discounts": {
          "$ref": "#/definitions/Discounts"
        },
        "documents": {
          "$ref": "#/definitions/Documents"
        }
      }
    },
    "PendingAgreement": {
      "allOf": [
        {
          "$ref": "#/definitions/Agreement"
        },
        {
          "type": "object"
        }
      ]
    },
    "AssignedAgreement": {
      "allOf": [
        {
          "$ref": "#/definitions/Agreement"
        },
        {
          "type": "object",
          "required": [
            "assignee"
          ],
          "properties": {
            "assignee": {
              "$ref": "#/definitions/Assignee"
            }
          }
        }
      ]
    },
    "ApprovedAgreement": {
      "type": "object",
      "required": [
        "agreementId",
        "fullName",
        "agreementStartDate",
        "agreementLastUpdateDate",
        "publishedDiscounts",
        "testPending"
      ],
      "properties": {
        "agreementId": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "agreementStartDate": {
          "type": "string",
          "format": "date"
        },
        "agreementLastUpdateDate": {
          "type": "string",
          "format": "date"
        },
        "publishedDiscounts": {
          "type": "integer",
          "format": "int64"
        },
        "testPending": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "ApprovedAgreementDetail": {
      "type": "object",
      "required": [
        "agreementId",
        "profile",
        "documents"
      ],
      "properties": {
        "agreementId": {
          "type": "string"
        },
        "profile": {
          "$ref": "#/definitions/ApprovedAgreementProfile"
        },
        "discounts": {
          "$ref": "#/definitions/ApprovedAgreementDiscounts"
        },
        "documents": {
          "$ref": "#/definitions/Documents"
        }
      }
    },
    "AgreementState": {
      "type": "string",
      "enum": [
        "PendingAgreement",
        "AssignedAgreement",
        "ApprovedAgreement",
        "RejectedAgreement"
      ]
    },
    "RefuseAgreement": {
      "type": "object",
      "required": [
        "reasonMessage"
      ],
      "properties": {
        "reasonMessage": {
          "type": "string",
          "maxLength": 500
        }
      }
    },
    "Assignee": {
      "type": "object",
      "required": [
        "fullName"
      ],
      "properties": {
        "fullName": {
          "type": "string"
        }
      }
    },
    "Profile": {
      "type": "object",
      "required": [
        "id",
        "agreementId",
        "fullName",
        "pecAddress",
        "referent"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "agreementId": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "referent": {
          "$ref": "#/definitions/Referent"
        }
      }
    },
    "SupportType": {
      "type": "string",
      "enum": [
        "EmailAddress",
        "Website",
        "PhoneNumber"
      ]
    },
    "ApprovedAgreementProfile": {
      "type": "object",
      "required": [
        "description",
        "description_en",
        "description_de",
        "salesChannel",
        "lastUpateDate",
        "fullName",
        "taxCodeOrVat",
        "pecAddress",
        "legalOffice",
        "telephoneNumber",
        "legalRepresentativeFullName",
        "legalRepresentativeTaxCode",
        "referent",
        "supportType",
        "supportValue"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "name_en": {
          "type": "string"
        },
        "name_de": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "description_en": {
          "type": "string"
        },
        "description_de": {
          "type": "string"
        },
        "salesChannel": {
          "$ref": "#/definitions/SalesChannel"
        },
        "imageUrl": {
          "type": "string"
        },
        "lastUpateDate": {
          "type": "string",
          "format": "date"
        },
        "fullName": {
          "type": "string"
        },
        "taxCodeOrVat": {
          "type": "string",
          "minLength": 11,
          "maxLength": 16
        },
        "pecAddress": {
          "type": "string",
          "format": "email",
          "minLength": 5,
          "maxLength": 100
        },
        "legalOffice": {
          "type": "string",
          "maxLength": 255
        },
        "telephoneNumber": {
          "type": "string",
          "minLength": 4,
          "maxLength": 15
        },
        "legalRepresentativeFullName": {
          "type": "string"
        },
        "legalRepresentativeTaxCode": {
          "type": "string",
          "minLength": 4,
          "maxLength": 20
        },
        "referent": {
          "$ref": "#/definitions/ApprovedAgreementReferent"
        },
        "supportType": {
          "$ref": "#/definitions/SupportType"
        },
        "supportValue": {
          "type": "string",
          "minLength": 5,
          "maxLength": 500
        }
      }
    },
    "Referent": {
      "type": "object",
      "required": [
        "firstName",
        "lastName",
        "emailAddress",
        "telephoneNumber"
      ],
      "properties": {
        "firstName": {
          "type": "string",
          "maxLength": 100
        },
        "lastName": {
          "type": "string",
          "maxLength": 100
        },
        "emailAddress": {
          "type": "string",
          "minLength": 5,
          "maxLength": 100
        },
        "telephoneNumber": {
          "type": "string",
          "minLength": 4,
          "maxLength": 15
        }
      }
    },
    "ApprovedAgreementReferent": {
      "type": "object",
      "required": [
        "firstName",
        "lastName",
        "emailAddress",
        "telephoneNumber",
        "role"
      ],
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "emailAddress": {
          "type": "string",
          "format": "email",
          "minLength": 5,
          "maxLength": 100
        },
        "telephoneNumber": {
          "type": "string",
          "minLength": 4,
          "maxLength": 15
        },
        "role": {
          "type": "string",
          "maxLength": 100
        }
      }
    },
    "Discounts": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Discount"
      }
    },
    "ApprovedAgreementDiscounts": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ApprovedAgreementDiscount"
      }
    },
    "Discount": {
      "type": "object",
      "required": [
        "id",
        "agreementId",
        "state",
        "name"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "agreementId": {
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/DiscountState"
        },
        "name": {
          "type": "string",
          "maxLength": 100
        },
        "name_en": {
          "type": "string",
          "maxLength": 100
        },
        "name_de": {
          "type": "string",
          "maxLength": 100
        }
      }
    },
    "ApprovedAgreementDiscount": {
      "type": "object",
      "required": [
        "id",
        "name",
        "description",
        "startDate",
        "endDate",
        "productCategories",
        "condition",
        "lastUpateDate",
        "state",
        "visibleOnEyca"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "maxLength": 100
        },
        "name_en": {
          "type": "string",
          "maxLength": 100
        },
        "name_de": {
          "type": "string",
          "maxLength": 100
        },
        "description": {
          "type": "string"
        },
        "description_en": {
          "type": "string"
        },
        "description_de": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        },
        "discount": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 99
        },
        "productCategories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductCategory"
          },
          "minItems": 1
        },
        "condition": {
          "type": "string"
        },
        "condition_en": {
          "type": "string"
        },
        "condition_de": {
          "type": "string"
        },
        "lastUpateDate": {
          "type": "string",
          "format": "date"
        },
        "state": {
          "$ref": "#/definitions/DiscountState"
        },
        "discountUrl": {
          "type": "string",
          "maxLength": 500
        },
        "staticCode": {
          "type": "string",
          "maxLength": 100
        },
        "landingPageUrl": {
          "type": "string",
          "maxLength": 500
        },
        "landingPageReferrer": {
          "type": "string",
          "maxLength": 100
        },
        "testFailureReason": {
          "type": "string",
          "maxLength": 500
        },
        "visibleOnEyca": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "DiscountState": {
      "type": "string",
      "enum": [
        "draft",
        "published",
        "suspended",
        "expired",
        "test_pending",
        "test_passed",
        "test_failed"
      ]
    },
    "ProductCategory": {
      "type": "string",
      "enum": [
        "BankingServices",
        "CultureAndEntertainment",
        "Health",
        "Home",
        "JobOffers",
        "Learning",
        "Sports",
        "SustainableMobility",
        "TelephonyAndInternet",
        "Travelling"
      ]
    },
    "SalesChannel": {
      "type": "object",
      "discriminator": "channelType",
      "required": [
        "channelType"
      ],
      "properties": {
        "channelType": {
          "$ref": "#/definitions/SalesChannelType"
        }
      }
    },
    "OnlineChannel": {
      "allOf": [
        {
          "$ref": "#/definitions/SalesChannel"
        },
        {
          "type": "object",
          "required": [
            "websiteUrl",
            "discountCodeType"
          ],
          "properties": {
            "websiteUrl": {
              "type": "string"
            },
            "discountCodeType": {
              "$ref": "#/definitions/DiscountCodeType"
            }
          }
        }
      ]
    },
    "OfflineChannel": {
      "allOf": [
        {
          "$ref": "#/definitions/SalesChannel"
        },
        {
          "type": "object",
          "required": [
            "addresses"
          ],
          "properties": {
            "websiteUrl": {
              "type": "string"
            },
            "addresses": {
              "type": "array",
              "items": {
                "type": "string",
                "minLength": 10,
                "maxLength": 500
              }
            },
            "allNationalAddresses": {
              "type": "boolean",
              "default": false
            }
          }
        }
      ]
    },
    "BothChannels": {
      "allOf": [
        {
          "$ref": "#/definitions/SalesChannel"
        },
        {
          "type": "object",
          "required": [
            "websiteUrl",
            "addresses"
          ],
          "properties": {
            "websiteUrl": {
              "type": "string"
            },
            "addresses": {
              "type": "array",
              "items": {
                "type": "string",
                "minLength": 10,
                "maxLength": 500
              }
            },
            "allNationalAddresses": {
              "type": "boolean",
              "default": false
            },
            "discountCodeType": {
              "$ref": "#/definitions/DiscountCodeType"
            }
          }
        }
      ]
    },
    "SalesChannelType": {
      "type": "string",
      "enum": [
        "OnlineChannel",
        "OfflineChannel",
        "BothChannels"
      ]
    },
    "DiscountCodeType": {
      "type": "string",
      "enum": [
        "Static",
        "API",
        "LandingPage",
        "Bucket"
      ]
    },
    "Documents": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Document"
      }
    },
    "Document": {
      "type": "object",
      "required": [
        "documentType",
        "documentUrl",
        "creationDate"
      ],
      "properties": {
        "documentType": {
          "$ref": "#/definitions/DocumentType"
        },
        "documentUrl": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "DocumentType": {
      "type": "string",
      "enum": [
        "Agreement",
        "AdhesionRequest"
      ]
    },
    "SuspendDiscount": {
      "type": "object",
      "required": [
        "reasonMessage"
      ],
      "properties": {
        "reasonMessage": {
          "type": "string",
          "maxLength": 500
        }
      }
    },
    "BucketCode": {
      "type": "object",
      "required": [
        "code"
      ],
      "properties": {
        "code": {
          "type": "string"
        }
      }
    },
    "FailureReason": {
      "type": "object",
      "required": [
        "reasonMessage"
      ],
      "properties": {
        "reasonMessage": {
          "type": "string",
          "maxLength": 500
        }
      }
    },
    "KeyOrganizationFiscalCode": {
      "type": "object",
      "properties": {
        "keyOrganizationFiscalCode": {
          "type": "string",
          "minLength": 8,
          "maxLength": 16
        }
      },
      "required": [
        "keyOrganizationFiscalCode"
      ]
    },
    "OrganizationFiscalCode": {
      "type": "object",
      "properties": {
        "organizationFiscalCode": {
          "type": "string",
          "minLength": 8,
          "maxLength": 16
        }
      },
      "required": [
        "organizationFiscalCode"
      ]
    },
    "OrganizationName": {
      "type": "object",
      "properties": {
        "organizationName": {
          "type": "string",
          "minLength": 1,
          "maxLength": 100
        }
      },
      "required": [
        "organizationName"
      ]
    },
    "ReferentFiscalCode": {
      "type": "object",
      "properties": {
        "referentFiscalCode": {
          "type": "string",
          "pattern": "^[A-Z]{6}[0-9LMNPQRSTUV]{2}[ABCDEHLMPRST][0-9LMNPQRSTUV]{2}[A-Z][0-9LMNPQRSTUV]{3}[A-Z]$"
        }
      },
      "required": [
        "referentFiscalCode˙"
      ]
    },
    "Organization": {
      "allOf": [
        {
          "$ref": "#/definitions/OrganizationFiscalCode"
        },
        {
          "$ref": "#/definitions/OrganizationName"
        },
        {
          "type": "object",
          "properties": {
            "pec": {
              "type": "string",
              "format": "email",
              "minLength": 5,
              "maxLength": 100
            },
            "insertedAt": {
              "type": "string",
              "format": "date"
            }
          },
          "required": [
            "pec"
          ]
        }
      ]
    },
    "Referents": {
      "type": "array",
      "items": {
        "type": "string",
        "minLength": 16,
        "maxLength": 16
      }
    },
    "OrganizationStatus": {
      "type": "string",
      "enum": [
        "Enabled",
        "Draft",
        "Pending",
        "Active"
      ]
    },
    "OrganizationWithReferents": {
      "allOf": [
        {
          "$ref": "#/definitions/KeyOrganizationFiscalCode"
        },
        {
          "$ref": "#/definitions/Organization"
        },
        {
          "type": "object",
          "properties": {
            "referents": {
              "$ref": "#/definitions/Referents"
            }
          },
          "required": [
            "referents"
          ]
        }
      ]
    },
    "OrganizationWithReferentsAndStatus": {
      "allOf": [
        {
          "$ref": "#/definitions/OrganizationWithReferents"
        },
        {
          "type": "object",
          "properties": {
            "status": {
              "$ref": "#/definitions/OrganizationStatus"
            }
          },
          "required": [
            "status"
          ]
        }
      ]
    },
    "Organizations": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrganizationWithReferentsAndStatus"
          }
        },
        "count": {
          "type": "integer"
        }
      }
    }
  },
  "responses": {
    "InvalidRequest": {
      "description": "Bad request"
    },
    "Forbidden": {
      "description": "Forbidden"
    },
    "NotFound": {
      "description": "Not found"
    },
    "Conflict": {
      "description": "Conflict"
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization",
      "description": "JWT Authorization header using the Bearer scheme"
    },
    "UserRole": {
      "type": "apiKey",
      "in": "header",
      "name": "X-CGN-USER-ROLE",
      "description": "Custom header containing requesting user role"
    }
  }
}